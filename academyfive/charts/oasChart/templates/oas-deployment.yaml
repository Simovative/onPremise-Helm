{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oas-deployment
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: oas-app
  template:
    metadata:
      labels:
        app: oas-app
        image-version: "{{ .Values.deployment.versionTag }}"
    spec:
      containers:
        - name: oas
          image: {{ .Values.deployment.image }}:{{ .Values.deployment.versionTag }}
          ports:
            - containerPort: 80
              name: http
          livenessProbe:
            httpGet:
              path: /v1/api/health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /v1/api/health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- if eq "file" (default "" (get (default (dict) .Values.deployment.envData) "OAS_FILE_STORAGE_TYPE")) }}
          volumeMounts:
            - name: oas-files-volume
              mountPath: {{ .Values.deployment.envData.OAS_FILE_STORAGE_LOCATION }}
          {{- end }}
          env:
            {{- range $key, $value := .Values.deployment.envData }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: OAS_ASSET_LOCATION
              value: "/app"
            - name: OAS_PORT
              value: "80"
      {{- if .Values.deployment.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.deployment.imagePullSecrets }}
      {{- end }}
      {{- if .Values.oas_file_storage_volume.enabled}}
      volumes:
        - name: oas-files-volume
          persistentVolumeClaim:
            claimName: {{ .Values.oas_file_storage_volume.name }}
          {{- end }}
{{- end }}
