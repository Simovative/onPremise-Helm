# configmap containing all env variables for academy image
apiVersion: v1
kind: ConfigMap
metadata:
  name: academy-configmap
data:
  #A5_DEPLOYMENT_TYPE: "onpremise"
  CAS_A5_API_SECRET_LOCATION: {{ .Values.envData.CAS_A5_API_SECRET_LOCATION }}
  CAS_BUCKET_NAME: {{ .Values.envData.CAS_BUCKET_NAME }}
  CAS_SERVICE_URL: {{ .Values.envData.CAS_SERVICE_URL}}
  S3_REGION: {{ .Values.envData.S3_REGION }}
  ASSET_SOURCE: {{ .Values.envData.ASSET_SOURCE }}
  S3_ASSETS_URL: {{ .Values.global.domain }}
  S3_ACADEMY_ASSETS_DOMAIN: {{ .Values.global.domain }}
  {{- if not (eq .Values.envData.A5_FILESTORAGE_ENDPOINT_URL "")}}
  AC5_FILESTORAGE_ENDPOINT_URL: {{ .Values.envData.A5_FILESTORAGE_ENDPOINT_URL }}
  {{- end }}
  AC5_INFRASTRUCTURE_CONFIG: {{ .Values.envData.A5_INFRASTRUCTURE_CONFIG }}
  {{- if not (eq .Values.envData.REDIS_SESSION.AUTH "no_auth" ) }}
  REDIS_SESSION_AUTH: {{ quote .Values.envData.REDIS_SESSION.AUTH }}
  {{- end }}
  {{- if not (eq .Values.global.ca_cert_file "") }}
  CA_CERT_FILE: {{ .Values.global.ca_cert_file }}
  CA_CERT_VALUE: {{ .Values.global.ca_cert_value }}
  {{- end }}

  # backwards compatibility with pre 16.06.x
  AC5_AWS_INFRASTRUCTURE_CONFIG_ARN: {{ .Values.envData.A5_INFRASTRUCTURE_CONFIG }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: academy-deployment
spec:
  replicas: {{ .Values.deployment.academyfiveReplicas }}
  selector:
    matchLabels:
      app: academy-app
  template:
    metadata:
      labels:
        app: academy-app
        image-version: {{ .Values.deployment.versionTag }}
    spec:
      serviceAccountName: {{ .Values.deployment.serviceAccountName }}
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "web"
      containers:
        - name: academy-container
          image: {{ .Values.deployment.image }}:{{ .Values.deployment.versionTag}}
          ports:
            - containerPort: 80
              name: web
          envFrom:
            - configMapRef:
                name: academy-configmap
          volumeMounts:
            - name: infrastructure-config-dir-volume
              mountPath: /run/config
            - name: secret-volume
              mountPath: /mnt/shared-secret-volume
            - name: academy-logs-volume
              mountPath: /srv/a5_source/files/log
          resources:
            limits:
              memory: {{ .Values.deployment.memoryLimits }}
              cpu: {{ .Values.deployment.cpuLimits }}
            requests:
              memory: {{ .Values.deployment.memoryRequests }}
              cpu: {{ .Values.deployment.cpuRequests }}
        - name: academyfive-academy-logs
          image: busybox
          command: [ "sh","-c","tail -F /srv/a5_source/files/log/academy.log" ]
          volumeMounts:
            - name: academy-logs-volume
              mountPath: /srv/a5_source/files/log
        - name: academyfive-error-logs
          image: busybox
          command: [ "sh","-c","tail -F /srv/a5_source/files/log/error-json.log" ]
          volumeMounts:
            - name: academy-logs-volume
              mountPath: /srv/a5_source/files/log
        - name: academyfive-data-access-logs
          image: busybox
          command: [ "sh","-c","tail -F /srv/a5_source/files/log/data-access.log" ]
          volumeMounts:
            - name: academy-logs-volume
              mountPath: /srv/a5_source/files/log
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: infrastructure-config-dir-volume
          configMap:
            name: academy-infrastructure-config-dir
        - name: secret-volume
          secret:
            secretName: cas-a5-api-shared-secret
        - name: academy-logs-volume
          persistentVolumeClaim:
            claimName: academy-logs-pvc-claim

---
# service for academy-deployment / app academy-app
apiVersion: v1
kind: Service
metadata:
  name: academy
spec:
  selector:
    app: academy-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # This name uniquely identifies the PVC. This is used in deployment.
  name: academy-logs-pvc-claim
spec:
  {{- if not (eq "-" .Values.storage.storageClass) }}
  storageClassName: "{{ .Values.storage.storageClass }}"
  {{- end }}
  accessModes:
    # The volume is mounted as read-write by Multiple nodes
    - ReadWriteMany
  resources:
    # This is the request for storage. Should be available in the cluster.
    requests:
      storage: {{ .Values.storage.size }}
