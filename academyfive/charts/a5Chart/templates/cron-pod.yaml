apiVersion: apps/v1
kind: Deployment
metadata:
  name: academy-cron-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: academy-cron-app
  template:
    metadata:
      labels:
        app: academy-cron-app
        image-version: {{ .Values.deployment.versionTag }}
        checksum/config: {{ include (print $.Template.BasePath "/cron-configmap.yaml") . | sha1sum }}
    spec:
      serviceAccountName: {{ .Values.deployment.serviceAccountName }}
      containers:
        - name: academy-container
          image: {{ .Values.deployment.image }}:{{ .Values.deployment.versionTag}}
          envFrom:
            - configMapRef:
                name: academy-cron-configmap
          volumeMounts:
            - name: infrastructure-config-dir-volume
              mountPath: /run/config
            {{- if (eq "file" .Values.infrastructureData.file_storage_type) }}
            - name: academy-files-volume
              mountPath: {{ .Values.infrastructureData.a5_file_storage_location }}
            {{- end }}
          resources:
            limits:
              memory: {{ .Values.deployment.cron.memoryLimits }}
              cpu: {{ .Values.deployment.cron.cpuLimits }}
            requests:
              memory: {{ .Values.deployment.cron.memoryRequests }}
              cpu: {{ .Values.deployment.cron.cpuRequests }}
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: infrastructure-config-dir-volume
          configMap:
            name: academy-infrastructure-config-dir
        {{- if (eq "file" .Values.infrastructureData.file_storage_type) }}
        - name: academy-files-volume
          persistentVolumeClaim:
            claimName: {{ .Values.academy_file_storage_volume.name }}
        {{- end }}
